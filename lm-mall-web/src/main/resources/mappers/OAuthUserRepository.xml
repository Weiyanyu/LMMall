<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.yeonon.repository.OAuthUserRepository">
  <resultMap id="BaseResultMap" type="top.yeonon.entity.OAuthUser">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="oauth_type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="oauth_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, oauth_type, oauth_id, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lmmall_oauth_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lmmall_oauth_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.yeonon.entity.OAuthUser">
    insert into lmmall_oauth_user (id, oauth_type, oauth_id, 
      user_id)
    values (#{id,jdbcType=INTEGER}, #{oauthType,jdbcType=VARCHAR}, #{oauthId,jdbcType=VARCHAR},
      #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="top.yeonon.entity.OAuthUser">
    insert into lmmall_oauth_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="oauthType != null">
        oauth_type,
      </if>
      <if test="oauthId != null">
        oauth_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="oauthType != null">
        #{oauthType,jdbcType=VARCHAR},
      </if>
      <if test="oauthId != null">
        #{oauthId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.yeonon.entity.OAuthUser">
    update lmmall_oauth_user
    <set>
      <if test="oauthType != null">
        oauth_type = #{oauthType,jdbcType=VARCHAR},
      </if>
      <if test="oauthId != null">
        oauth_id = #{oauthId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.yeonon.entity.OAuthUser">
    update lmmall_oauth_user
    set oauth_type = #{oauthType,jdbcType=VARCHAR},
      oauth_id = #{oauthId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByOAuthTypeAndOAuthId" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM lmmall_oauth_user
    WHERE oauth_type=#{oAuthType}
    AND oauth_id=#{oAuthId}
  </select>
</mapper>